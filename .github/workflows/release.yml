name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: macos-latest  # Using macOS runner to support lipo
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x

      - name: Get dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Extract version
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build release artifacts
        env:
          VERSION: ${{ steps.extract_version.outputs.VERSION }}
        run: |
          mkdir -p dist
          
          # Build Linux binaries
          echo "Building for linux/amd64..."
          GOOS=linux GOARCH=amd64 go build -o dist/summon-wpm-linux-amd64 -ldflags "-X main.version=$VERSION" ./cmd/summon-wpm
          (cd dist && tar -czf summon-wpm-v$VERSION-linux-amd64.tar.gz summon-wpm-linux-amd64)
          
          echo "Building for linux/arm64..."
          GOOS=linux GOARCH=arm64 go build -o dist/summon-wpm-linux-arm64 -ldflags "-X main.version=$VERSION" ./cmd/summon-wpm
          (cd dist && tar -czf summon-wpm-v$VERSION-linux-arm64.tar.gz summon-wpm-linux-arm64)
          
          # Build macOS universal binary
          echo "Building universal macOS binary..."
          GOOS=darwin GOARCH=amd64 go build -o dist/summon-wpm-darwin-amd64 -ldflags "-X main.version=$VERSION" ./cmd/summon-wpm
          GOOS=darwin GOARCH=arm64 go build -o dist/summon-wpm-darwin-arm64 -ldflags "-X main.version=$VERSION" ./cmd/summon-wpm
          lipo -create -output dist/summon-wpm-darwin-universal dist/summon-wpm-darwin-amd64 dist/summon-wpm-darwin-arm64
          (cd dist && tar -czf summon-wpm-v$VERSION-darwin-universal.tar.gz summon-wpm-darwin-universal)
          
          # Build Windows binaries
          echo "Building for windows/amd64..."
          GOOS=windows GOARCH=amd64 go build -o dist/summon-wpm-windows-amd64.exe -ldflags "-X main.version=$VERSION" ./cmd/summon-wpm
          (cd dist && zip summon-wpm-v$VERSION-windows-amd64.zip summon-wpm-windows-amd64.exe)
          
          echo "Building for windows/arm64..."
          GOOS=windows GOARCH=arm64 go build -o dist/summon-wpm-windows-arm64.exe -ldflags "-X main.version=$VERSION" ./cmd/summon-wpm
          (cd dist && zip summon-wpm-v$VERSION-windows-arm64.zip summon-wpm-windows-arm64.exe)
          
          ls -la dist/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: summon-wpm v${{ steps.extract_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/summon-wpm-v${{ steps.extract_version.outputs.VERSION }}-*.tar.gz
            dist/summon-wpm-v${{ steps.extract_version.outputs.VERSION }}-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}