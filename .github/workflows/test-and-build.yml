name: Test and Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x

      - name: Get dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v ./...

      - name: Run tests with coverage
        run: |
          go test -race -coverprofile=coverage.txt -covermode=atomic ./...
          go tool cover -func=coverage.txt

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BINARY_NAME=summon-wpm
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME=$BINARY_NAME.exe
          fi
          go build -o dist/$BINARY_NAME-${{ matrix.goos }}-${{ matrix.goarch }} -ldflags "-X main.version=$(grep "version = " cmd/summon-wpm/main.go | cut -d '"' -f2)" ./cmd/summon-wpm

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: summon-wpm-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/summon-wpm-${{ matrix.goos }}-${{ matrix.goarch }}
          if-no-files-found: error